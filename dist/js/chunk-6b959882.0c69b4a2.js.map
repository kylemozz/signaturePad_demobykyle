{"version":3,"sources":["webpack:///./src/views/Signature/Signature.vue?4d6e","webpack:///./src/views/Signature/Signature.vue?b8e5","webpack:///./src/views/Signature/Signature.vue?0902","webpack:///src/views/Signature/Signature.vue","webpack:///./src/views/Signature/Signature.vue?4310","webpack:///./src/views/Signature/Signature.vue?c122"],"names":["render","_vm","this","_h","$createElement","_c","_self","staticClass","attrs","_v","on","penSizeChange","model","value","callback","$$v","width","expression","$event","download","staticStyle","key","imgTypeChange","clear","btnHighlight","imgFlag","rePaint","clearTrace","saveTraceAsJSON","fileInput","_s","file","length","name","imageInput","image","traceBackWard","eraserFlag","eraserTrigger","penShape","colorChange","color","staticRenderFns","props","lineWidth","type","Number","default","lineColor","String","canvasBgColor","imageType","data","openKeys2","openKeys","canvas","cxt","trace","flag","fileInputBtn","imageInputBtn","imageToInsert","newTrace","eraserTrace","minusX","minusY","watch","methods","showMenu","openChange","console","log","injectImage","drawImageOnCanvas","injectJSON","json","JSON","parse","concat","mobileCompute","getBoundingClientRect","x","y","isMobile","penShapeCompute","index","len","j","end","push","decay","branchFlag","i","beginAndMove","draw","shift","clearCanvas","image2Canvas","eraserTheLine","x1","y1","x2","y2","x3","y3","x4","y4","res","judgeIntersect","removeThisLine","u","v","w","z","conditon1","Math","min","max","condition2","condition3","condition4","start","splice","img","Image","src","onload","drawImage","penFlag","rePaintTrace","click","backFlag","slice","alert","content","stringify","jsonLink","document","createElement","blob","Blob","href","URL","createObjectURL","$emit","eraserTraceInput","traceInput","strokeStyle","shadowColor","isNaN","getDOMEl","querySelector","canvasSupTest","getContext","section","className","innerHTML","prepend","Error","porpertyInit","clientWidth","height","clientHeight","fillStyle","fillRect","lineCap","lineJoin","shadowBlur","beginPath","moveTo","lineTo","stroke","close","toDataURL","downLoadLink","clearRect","windowToCanvas","window","innerWidth","innerHeight","components","mounted","addEventListener","body","e","component"],"mappings":"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","file":"js/chunk-6b959882.0c69b4a2.js","sourcesContent":["export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Signature.vue?vue&type=style&index=0&id=554da1c4&scoped=true&lang=css&\"","export * from \"-!../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../../node_modules/css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../node_modules/postcss-loader/src/index.js??ref--6-oneOf-1-2!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Signature.vue?vue&type=style&index=1&lang=css&\"","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:\"canvas_container\"},[_c('canvas',{attrs:{\"id\":\"canvas\"}}),_c('a-menu',{staticClass:\"canvas-menu\",attrs:{\"mode\":\"horizontal\",\"selectable\":false,\"multiple\":true}},[_c('a-menu-item',{staticClass:\"menu-item\"},[_c('span',[_vm._v(\"粗细：\")]),_c('a-input',{staticClass:\"pen-width-input\",on:{\"blur\":_vm.penSizeChange},model:{value:(_vm.width),callback:function ($$v) {_vm.width=$$v},expression:\"width\"}})],1),_c('a-menu-item',{staticClass:\"menu-item\"},[_c('a-button',{staticClass:\"menu-btn small-width\",on:{\"click\":function($event){return _vm.download()}}},[_c('a-icon',{staticClass:\"small-margin-right\",attrs:{\"type\":\"download\"}}),_c('span',{staticClass:\"btn-text\"},[_vm._v(\"保存\")])],1)],1),_c('a-menu-item',{staticClass:\"menu-item\"},[_vm._v(\" 格式： \"),_c('a-select',{staticClass:\"img-type\",staticStyle:{\"width\":\"70px\"},attrs:{\"label-in-value\":\"\",\"default-value\":{ key: 'jpg' }},on:{\"change\":_vm.imgTypeChange}},[_c('a-select-option',{attrs:{\"value\":\"png\"}},[_vm._v(\" png \")]),_c('a-select-option',{attrs:{\"value\":\"jpg\"}},[_vm._v(\" jpg \")])],1)],1),_c('a-menu-item',{staticClass:\"menu-item\"},[_c('a-button',{staticClass:\"menu-btn small-width\",attrs:{\"id\":\"saveCanvas\"},on:{\"click\":function($event){return _vm.clear()}}},[_c('a-icon',{staticClass:\"small-margin-right\",attrs:{\"type\":\"delete\"}}),_c('span',{staticClass:\"btn-text\"},[_vm._v(\"清除\")])],1)],1),_c('a-menu-item',{staticClass:\"menu-item\"},[_c('a-button',{staticClass:\"menu-btn small-width\",attrs:{\"type\":_vm.btnHighlight || _vm.imgFlag ? 'primary' : ''},on:{\"click\":function($event){return _vm.rePaint()}}},[_vm._v(\"重绘\")])],1),_c('a-menu-item',{staticClass:\"menu-item\"},[_c('a-button',{staticClass:\"menu-btn small-width\",attrs:{\"type\":_vm.btnHighlight || _vm.imgFlag ? 'primary' : ''},on:{\"click\":function($event){return _vm.clearTrace()}}},[_vm._v(\"清除重绘\")])],1),_c('a-menu-item',{staticClass:\"menu-item\"},[_c('a-button',{staticClass:\"menu-btn small-width\",attrs:{\"type\":_vm.btnHighlight ? 'primary' : ''},on:{\"click\":function($event){return _vm.saveTraceAsJSON()}}},[_vm._v(\"导出重绘\")])],1),_c('a-menu-item',{staticClass:\"menu-item\"},[_c('a-button',{staticClass:\"menu-btn small-width\",on:{\"click\":function($event){return _vm.fileInput()}}},[_vm._v(\"导入重绘\")]),_vm._v(\" \"+_vm._s(_vm.file.length > 0 ? _vm.file[0].name : \"none\")+\" \"),_c('input',{attrs:{\"id\":\"fileInputBtn\",\"type\":\"file\",\"multiple\":\"\"}})],1),_c('a-menu-item',{staticClass:\"menu-item\"},[_c('a-button',{staticClass:\"menu-btn small-width\",on:{\"click\":function($event){return _vm.imageInput()}}},[_vm._v(\"导入图片\")]),_vm._v(\" \"+_vm._s(_vm.image.length > 0 ? _vm.image[0].name : \"none\")+\" \"),_c('input',{staticStyle:{\"display\":\"none\"},attrs:{\"id\":\"imageInputBtn\",\"type\":\"file\",\"multiple\":\"\"}})],1),_c('a-menu-item',{staticClass:\"menu-item\"},[_c('a-button',{staticClass:\"menu-btn small-width\",on:{\"click\":function($event){return _vm.traceBackWard()}}},[_vm._v(\"撤回\")])],1),_c('a-menu-item',{staticClass:\"menu-item\"},[_c('a-button',{staticClass:\"menu-btn small-width\",attrs:{\"type\":_vm.eraserFlag ? 'primary' : ''},on:{\"click\":function($event){return _vm.eraserTrigger()}}},[_vm._v(\"橡皮擦\")])],1),_c('a-menu-item',{staticClass:\"menu-item\"},[_c('a-button',{staticClass:\"menu-btn small-width\",on:{\"click\":function($event){return _vm.penShape()}}},[_vm._v(\"笔锋\")])],1),_c('a-menu-item',{key:\"13\",staticClass:\"menu-item extra-show-item\"},[_c('span',[_vm._v(\"颜色：\")]),_c('colorPicker',{staticClass:\"colorPicker\",on:{\"change\":_vm.colorChange},model:{value:(_vm.color),callback:function ($$v) {_vm.color=$$v},expression:\"color\"}})],1)],1)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\r\n  <div class=\"canvas_container\">\r\n    <canvas id=\"canvas\"></canvas>\r\n    <a-menu\r\n      mode=\"horizontal\"\r\n      class=\"canvas-menu\"\r\n      :selectable=\"false\"\r\n      :multiple=\"true\"\r\n    >\r\n      <a-menu-item class=\"menu-item\">\r\n        <span>粗细：</span>\r\n        <a-input\r\n          v-model=\"width\"\r\n          @blur=\"penSizeChange\"\r\n          class=\"pen-width-input\"\r\n        />\r\n      </a-menu-item>\r\n      <a-menu-item class=\"menu-item\">\r\n        <a-button class=\"menu-btn small-width\" @click=\"download()\"\r\n          ><a-icon class=\"small-margin-right\" type=\"download\" /><span\r\n            class=\"btn-text\"\r\n            >保存</span\r\n          ></a-button\r\n        >\r\n      </a-menu-item>\r\n      <a-menu-item class=\"menu-item\">\r\n        格式：\r\n        <a-select\r\n          label-in-value\r\n          :default-value=\"{ key: 'jpg' }\"\r\n          style=\"width: 70px\"\r\n          @change=\"imgTypeChange\"\r\n          class=\"img-type\"\r\n        >\r\n          <a-select-option value=\"png\">\r\n            png\r\n          </a-select-option>\r\n          <a-select-option value=\"jpg\">\r\n            jpg\r\n          </a-select-option>\r\n          <!-- <a-select-option value=\"svg\">\r\n            svg\r\n          </a-select-option> -->\r\n        </a-select>\r\n      </a-menu-item>\r\n\r\n      <a-menu-item class=\"menu-item\">\r\n        <a-button class=\"menu-btn small-width\" id=\"saveCanvas\" @click=\"clear()\"\r\n          ><a-icon class=\"small-margin-right\" type=\"delete\" /><span\r\n            class=\"btn-text\"\r\n            >清除</span\r\n          ></a-button\r\n        >\r\n      </a-menu-item>\r\n      <a-menu-item class=\"menu-item\">\r\n        <a-button\r\n          @click=\"rePaint()\"\r\n          class=\"menu-btn small-width\"\r\n          :type=\"btnHighlight || imgFlag ? 'primary' : ''\"\r\n          >重绘</a-button\r\n        >\r\n      </a-menu-item>\r\n      <a-menu-item class=\"menu-item\">\r\n        <a-button\r\n          @click=\"clearTrace()\"\r\n          class=\"menu-btn small-width\"\r\n          :type=\"btnHighlight || imgFlag ? 'primary' : ''\"\r\n          >清除重绘</a-button\r\n        >\r\n      </a-menu-item>\r\n      <a-menu-item class=\"menu-item\">\r\n        <a-button\r\n          class=\"menu-btn small-width\"\r\n          @click=\"saveTraceAsJSON()\"\r\n          :type=\"btnHighlight ? 'primary' : ''\"\r\n          >导出重绘</a-button\r\n        >\r\n      </a-menu-item>\r\n      <a-menu-item class=\"menu-item\">\r\n        <a-button class=\"menu-btn small-width\" @click=\"fileInput()\"\r\n          >导入重绘</a-button\r\n        >\r\n        {{ file.length > 0 ? file[0].name : \"none\" }}\r\n        <input id=\"fileInputBtn\" type=\"file\" multiple />\r\n      </a-menu-item>\r\n      <a-menu-item class=\"menu-item\">\r\n        <a-button class=\"menu-btn small-width\" @click=\"imageInput()\"\r\n          >导入图片</a-button\r\n        >\r\n        {{ image.length > 0 ? image[0].name : \"none\" }}\r\n        <input style=\"display:none;\" id=\"imageInputBtn\" type=\"file\" multiple />\r\n      </a-menu-item>\r\n      <a-menu-item class=\"menu-item\">\r\n        <a-button class=\"menu-btn small-width\" @click=\"traceBackWard()\"\r\n          >撤回</a-button\r\n        >\r\n      </a-menu-item>\r\n      <a-menu-item class=\"menu-item\">\r\n        <a-button\r\n          :type=\"eraserFlag ? 'primary' : ''\"\r\n          class=\"menu-btn small-width\"\r\n          @click=\"eraserTrigger()\"\r\n          >橡皮擦</a-button\r\n        >\r\n      </a-menu-item>\r\n      <a-menu-item class=\"menu-item\">\r\n        <a-button class=\"menu-btn small-width\" @click=\"penShape()\"\r\n          >笔锋</a-button\r\n        >\r\n      </a-menu-item>\r\n      <!-- <a-menu-item class=\"menu-item\">\r\n        <a-button class=\"menu-btn small-width\" @click=\"findMark()\"\r\n          >断点</a-button\r\n        >\r\n      </a-menu-item> -->\r\n      <!-- <a-menu-item class=\"menu-item\">\r\n        <a-button class=\"menu-btn small-width\" @click=\"wdMonitor()\"\r\n          >窗口</a-button\r\n        >\r\n      </a-menu-item> -->\r\n      <!-- <a-menu-item class=\"menu-item\">\r\n        <a-button class=\"menu-btn small-width\" @click=\"dataTest()\"\r\n          >导出测试</a-button\r\n        >\r\n      </a-menu-item>\r\n      <a-menu-item class=\"menu-item\">\r\n        <a-button class=\"menu-btn small-width\" @click=\"dataTest2()\"\r\n          >导入测试</a-button\r\n        >\r\n      </a-menu-item> -->\r\n      <!-- <a-sub-menu> -->\r\n\r\n      <!-- <a-menu-item-group key=\"12\" class=\"menu-item\">\r\n          <a-menu-item>\r\n             <span>粗细：</span>\r\n            <a-input\r\n              @click=\"showMenu\"\r\n              v-model=\"lineWidth\"\r\n              @blur=\"penSizeChange\"\r\n              class=\"pen-width-input\"\r\n            />\r\n          </a-menu-item>\r\n        </a-menu-item-group> -->\r\n\r\n      <a-menu-item key=\"13\" class=\"menu-item extra-show-item\">\r\n        <span>颜色：</span>\r\n        <colorPicker\r\n          @change=\"colorChange\"\r\n          class=\"colorPicker\"\r\n          v-model=\"color\"\r\n        />\r\n      </a-menu-item>\r\n    </a-menu>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  // 暴露的参数\r\n  props: {\r\n    lineWidth: {\r\n      // 线条宽度 默认为5\r\n      type: Number,\r\n      default: 5\r\n    },\r\n    lineColor: {\r\n      // 线条颜色 默认黑色\r\n      type: String,\r\n      default: '#000'\r\n    },\r\n    canvasBgColor: {\r\n      // 绘画框背景颜色\r\n      type: String,\r\n      default: '#fff'\r\n    },\r\n    imageType: {\r\n      // 默认的图片类型\r\n      type: String,\r\n      default: 'jpg'\r\n    }\r\n  },\r\n  data () {\r\n    return {\r\n      openKeys2: [],\r\n      openKeys: [],\r\n      canvas: '', // canvas画布\r\n      // lineWidth: '', // 线条宽度 默认为5\r\n      // lineColor: '', // 线条颜色\r\n      // canvasBgColor: '', // 绘画框背景颜色\r\n      // imageType: 'jpg', // 将要保存的图片类型 默认jpg\r\n      cxt: '', // canvas的context,\r\n      trace: [], // 轨迹变量数据\r\n      flag: '', // 鼠标移动时的标志量\r\n      btnHighlight: false, // 按钮高亮标志量\r\n      imgFlag: false, // 图片功能关联的重绘和消除重绘高亮\r\n      file: '', // 传入的文件\r\n      fileInputBtn: '', // 文件选择输入按钮\r\n      imageInputBtn: '', // 图片选择输入按扭\r\n      image: '', // 导入的图片\r\n      imageToInsert: '', // 要导入canvas的图片\r\n      newTrace: '', // 导入的新轨迹\r\n      // ImageData: ''\r\n      eraserFlag: false, // 橡皮擦功能启动标志位\r\n      eraserTrace: [], // 橡皮擦轨迹\r\n      minusX: '', // 移动端画布x轴偏移值\r\n      minusY: '', // 移动端画布y轴偏移值\r\n      color: this.lineColor,\r\n      width: this.lineWidth\r\n    }\r\n  },\r\n  watch: {\r\n    trace () {\r\n      // 只能使用watcher 如果在按钮属性直接使用三元表达式会导致书写卡顿\r\n      if (this.trace.length > 0) {\r\n        this.btnHighlight = true\r\n      } else {\r\n        this.btnHighlight = false\r\n      }\r\n    },\r\n    imageToInsert () {\r\n      if (this.imageToInsert) {\r\n        this.imgFlag = true\r\n      } else {\r\n        this.imgFlag = false\r\n      }\r\n    }\r\n  },\r\n  methods: {\r\n    // dataTest () {\r\n    //   this.ImageData = this.cxt.getImageData(\r\n    //     0,\r\n    //     0,\r\n    //     this.canvas.width,\r\n    //     this.canvas.height\r\n    //   )\r\n    //   console.log(ImageData)\r\n    // },\r\n    // dataTest2 () {\r\n    //   this.cxt.putImageData(this.ImageData, 0, 0)\r\n    // },\r\n    showMenu () {\r\n      this.openKeys = this.openKeys2\r\n    },\r\n    openChange () {\r\n      this.openKeys2 = this.openKeys\r\n      console.log(this.openKeys)\r\n    },\r\n    /* 外部图片传入 */\r\n    injectImage (image) {\r\n      console.log(image)\r\n      this.imageToInsert = image\r\n      this.drawImageOnCanvas()\r\n    },\r\n    /* 外部JSON传入 */\r\n    injectJSON (json) {\r\n      console.log(json)\r\n      this.newTrace = JSON.parse(json)\r\n      this.trace = this.trace.concat(this.newTrace)\r\n    },\r\n    /* 计算移动端偏移值 */\r\n    mobileCompute () {\r\n      this.minusX = this.canvas.getBoundingClientRect().x\r\n      this.minusY = this.canvas.getBoundingClientRect().y\r\n    },\r\n    /* 判断浏览器是pc端还是移动端 */\r\n    isMobile () {\r\n      if (\r\n        window.navigator.userAgent.match(\r\n          /(phone|pad|pod|iPhone|iPod|ios|iPad|Android|Mobile|BlackBerry|IEMobile|MQQBrowser|JUC|Fennec|wOSBrowser|BrowserNG|WebOS|Symbian|Windows Phone)/i\r\n        )\r\n      ) {\r\n        return true // 移动端\r\n      } else {\r\n        return false // PC端\r\n      }\r\n    },\r\n    /* 笔锋测试 核心思路为线的宽度逐渐减少 */\r\n    penShapeCompute () {\r\n      var index = [] // 每条线段的终点坐标\r\n      var len = []\r\n      for (var j = 0; j < this.trace.length; j++) {\r\n        if (this.trace[j].end) {\r\n          index.push(j)\r\n        }\r\n      }\r\n      // console.log(index)\r\n      // 计算每段线段的长度\r\n\r\n      len[0] = index[0] + 1\r\n      for (let j = 1; j < index.length; j++) {\r\n        len.push(index[j] - index[j - 1])\r\n      }\r\n\r\n      // console.log(len)\r\n      // var count = 0\r\n      var decay = (this.lineWidth - 1) / len[0] // 宽度衰减值\r\n      // console.log(decay)\r\n      var branchFlag = true\r\n      // 遍历轨迹对象\r\n      for (var i = 0; i < this.trace.length; i++) {\r\n        // console.log(this.trace[i])\r\n        if (branchFlag) {\r\n          this.beginAndMove(this.trace[i].x, this.trace[i].y)\r\n          branchFlag = false\r\n          continue\r\n        }\r\n\r\n        // 逐渐改变线的宽度\r\n        this.cxt.lineWidth -= decay\r\n        // console.log(this.cxt.lineWidth)\r\n        this.draw(this.trace[i].x, this.trace[i].y)\r\n        if (this.trace[i].end) {\r\n          branchFlag = true\r\n          this.cxt.lineWidth = this.lineWidth\r\n          len.shift()\r\n          decay = (this.lineWidth - 1) / len[0]\r\n          // count += 1\r\n          // console.log(decay)\r\n        }\r\n      }\r\n      // console.log(count)\r\n    },\r\n    penShape () {\r\n      this.clearCanvas()\r\n      this.penShapeCompute()\r\n      this.image2Canvas(true)\r\n    },\r\n    /* 遍历轨迹数组 并根据检测结果擦除 */\r\n    eraserTheLine () {\r\n      for (var i = 0; i < this.trace.length - 1; i++) {\r\n        // 第一个点不能是终点 以防错误连线检测\r\n        if (!this.trace[i].end) {\r\n          // 相交检测\r\n          var x1 = this.eraserTrace[0].x\r\n          var y1 = this.eraserTrace[0].y\r\n          var x2 = this.eraserTrace[1].x\r\n          var y2 = this.eraserTrace[1].y\r\n          var x3 = this.trace[i].x\r\n          var y3 = this.trace[i].y\r\n          var x4 = this.trace[i + 1].x\r\n          var y4 = this.trace[i + 1].y\r\n          var res = this.judgeIntersect(x1, y1, x2, y2, x3, y3, x4, y4)\r\n          if (res) {\r\n            this.removeThisLine(i)\r\n          }\r\n        }\r\n      }\r\n    },\r\n    /* 四点两两连线线段相交检测 注意传入参数的顺序 */\r\n    judgeIntersect (x1, y1, x2, y2, x3, y3, x4, y4) {\r\n      // 快速排斥\r\n      // 两个线段为对角线组成的矩形，如果两个矩形没有重叠的部分，那么两条线段一定不相交（但是重叠的矩形也有可能不相交）\r\n\r\n      // 1. 线段ab的低点低于cd的最高点（可能重合）\r\n      var conditon1 = Math.min(y1, y2) <= Math.max(y3, y4)\r\n      // 2. cd最左端小于ab最右端\r\n      var condition2 = Math.min(x3, x4) < Math.max(x1, x2)\r\n      // 3. cd的最低点低于ab的最高点（加上条件1，两线段在竖直方向上重合）\r\n      var condition3 = Math.min(y3, y4) < Math.max(y1, y2)\r\n      // 4. ab的最左端小于cd的最右端\r\n      var condition4 = Math.min(x1, x2) < Math.max(x3, x4)\r\n\r\n      // 综合以上4个条件 矩形是重合的（也包括矩形包含的情况） 这一步是判断那些绝对不重合的矩阵 即绝对不相交\r\n      if (!(conditon1 && condition2 && condition3 && condition4)) {\r\n        return false\r\n      }\r\n\r\n      // 剩下的用跨立实验判断\r\n      // 如果两条线段相交 必然跨立，以一条线段为标准，另一条线段的两端点一定在这条线段的两端\r\n      // 即ab两点在线段cd的两端 cd两点在线段ab的两端\r\n      // (ACxAB)*(ABxAD) <= 0\r\n      // AC AB 叉乘<=0\r\n      // AB AD 叉乘<=0\r\n      var u, v, w, z\r\n\r\n      // AC AB 叉乘 详见向量公式以及叉乘公式\r\n      u = (x3 - x1) * (y2 - y1) - (x2 - x1) * (y3 - y1)\r\n      // AD AB 叉乘\r\n      v = (x4 - x1) * (y2 - y1) - (x2 - x1) * (y4 - y1)\r\n      // 以下同理 即对于另一条线段也要判断是否在两侧\r\n      w = (x1 - x3) * (y4 - y3) - (x4 - x3) * (y1 - y3)\r\n      z = (x2 - x3) * (y4 - y3) - (x4 - x3) * (y2 - y3)\r\n      return u * v <= 0.00000001 && w * z <= 0.00000001\r\n    },\r\n    /* 传入坐标 移除该坐标所在的线段 */\r\n    removeThisLine (index) {\r\n      var start = 0\r\n      var end = 0\r\n      for (let i = index; i >= 0; i--) {\r\n        if (this.trace[i].end) {\r\n          start = i + 1\r\n          break\r\n        }\r\n      }\r\n      for (let i = index; i < this.trace.length; i++) {\r\n        if (this.trace[i].end) {\r\n          end = i\r\n          break\r\n        }\r\n      }\r\n      this.trace.splice(start, end - start + 1)\r\n      // console.log(this.trace)\r\n      this.rePaint()\r\n    },\r\n    eraserTrigger () {\r\n      this.eraserFlag = !this.eraserFlag\r\n      this.eraserTrace = [] // 清空上一次的橡皮擦轨迹数组\r\n    },\r\n    image2Canvas (penFlag) {\r\n      var img = new Image()\r\n      // console.log(this.imageToInsert)\r\n      img.src = this.imageToInsert\r\n      // 异步事件的使用要特别注意\r\n      img.onload = function () {\r\n        this.cxt.drawImage(img, 0, 0)\r\n        // 重画之前的轨迹\r\n        if (this.trace.length > 0 && penFlag) {\r\n          this.penShapeCompute()\r\n        } else {\r\n          this.rePaintTrace()\r\n        }\r\n      }.bind(this)\r\n    },\r\n    /* 导入的图片显示在canvas上 */\r\n    drawImageOnCanvas () {\r\n      // this.clearCanvas()\r\n      // this.clearTrace()\r\n      this.image2Canvas()\r\n    },\r\n    /* 导入图片 */\r\n    imageInput () {\r\n      this.imageInputBtn.click()\r\n    },\r\n    /* test */\r\n    // findMark () {\r\n    //   var em = []\r\n    //   for (var i = 0; i < this.trace.length; i++) {\r\n    //     if (this.trace[i].end === true) {\r\n    //       em.push(i)\r\n    //     }\r\n    //   }\r\n    //   console.log(this.trace)\r\n    //   console.log(em)\r\n    // },\r\n    /* 撤回轨迹的上一步 切割数组 */\r\n    traceBackWard () {\r\n      if (this.trace.length === 0) {\r\n        alert('当前不存在可撤回轨迹')\r\n        return\r\n      }\r\n      var backFlag = true\r\n      // this.findMark()\r\n      // console.log(this.trace)\r\n      // 逆序遍历\r\n      for (var i = this.trace.length - 2; i >= 0; i--) {\r\n        if (this.trace[i].end === true) {\r\n          this.trace = this.trace.slice(0, i + 1)\r\n          backFlag = false\r\n          break\r\n        }\r\n      }\r\n      if (backFlag) {\r\n        this.trace = []\r\n      }\r\n\r\n      // this.findMark()\r\n      // console.log(this.trace)\r\n\r\n      this.rePaint() // 重新绘制之前的轨迹 也是在这一步导致导入的图片消失\r\n    },\r\n    /* 文件导入 */\r\n    fileInput () {\r\n      this.fileInputBtn.click() // 触发真正的文件导入按钮\r\n    },\r\n    /* 保存轨迹文件 */\r\n    saveTraceAsJSON () {\r\n      var content = JSON.stringify(this.trace) // 转换为JSON格式\r\n      // var content = JSON.stringify(\r\n      //   (this.ImageData = this.cxt.getImageData(\r\n      //     0,\r\n      //     0,\r\n      //     this.canvas.width,\r\n      //     this.canvas.height\r\n      //   ))\r\n      // )\r\n      // console.log(content)\r\n      var jsonLink = document.createElement('a')\r\n      jsonLink.download = 'trace.json'\r\n      var blob = new Blob([content]) // 字符内容变为blob地址\r\n      jsonLink.href = URL.createObjectURL(blob)\r\n      jsonLink.click()\r\n      this.$emit('uploadTraceJSONToFather', content)\r\n    },\r\n    /* 橡皮擦输入轨迹 */\r\n    eraserTraceInput (x, y) {\r\n      this.eraserTrace.push({ x: x, y: y })\r\n    },\r\n    /* 输入轨迹 */\r\n    traceInput (x, y, flag) {\r\n      this.trace.push({\r\n        x: x,\r\n        y: y,\r\n        end: flag\r\n      })\r\n    },\r\n    /* 窗口测试 */\r\n    // wdMonitor () {\r\n    //   console.log(this.canvas.width, this.canvas.height)\r\n    //   console.log(window.innerWidth, window.innerHeight)\r\n    // },\r\n    /* 利用轨迹数据重新绘制 */\r\n    rePaintTrace () {\r\n      var branchFlag = true\r\n      // 遍历轨迹对象\r\n      for (var i = 0; i < this.trace.length; i++) {\r\n        // console.log(this.trace[i])\r\n        if (branchFlag) {\r\n          this.beginAndMove(this.trace[i].x, this.trace[i].y)\r\n          branchFlag = false\r\n          continue\r\n        }\r\n        if (this.trace[i].end) {\r\n          branchFlag = true\r\n        }\r\n        this.draw(this.trace[i].x, this.trace[i].y)\r\n      }\r\n    },\r\n    rePaint () {\r\n      this.clearCanvas() // 重绘首先清空画布 这一步必须清除画布 因为撤回的原理是把分割后的数组重新绘制 这一步清空数组也导致了之前导入图片的消失\r\n\r\n      // 重画之前的图片 如果再这一步加重画图片 会导致之前的轨迹全部消失\r\n      if (this.imageToInsert) {\r\n        this.drawImageOnCanvas()\r\n      }\r\n      this.rePaintTrace()\r\n      // console.log(this.trace)\r\n      // console.log(this.trace)\r\n    },\r\n    /* 改变笔触颜色 注意要改两种颜色一种是线的颜色 一种时阴影的颜色 */\r\n    colorChange () {\r\n      this.cxt.strokeStyle = this.color\r\n      this.cxt.shadowColor = this.color\r\n    },\r\n    /* 改变笔触粗细 注意笔触属性接受值为number */\r\n    penSizeChange () {\r\n      // console.log(e) // e.data\r\n      // console.log(typeof this.lineWidth) //用户输入均为字符串\r\n      let lineWidth = Number(this.width)\r\n      if (lineWidth <= 0 || lineWidth > 10 || isNaN(lineWidth)) {\r\n        // 范围判定 只接受1-10\r\n        console.log('请输入1-10以内的数值')\r\n        lineWidth = 5 // 恢复原值\r\n        this.cxt.lineWidth = lineWidth\r\n        return\r\n      }\r\n      this.cxt.lineWidth = lineWidth // 更改canvas设置\r\n    },\r\n    /* 改变保存图片类型 */\r\n    imgTypeChange (value) {\r\n      // console.log(value) //{key: \"jpeg\", label: \" jpg \"}\r\n      this.imageType = value.key\r\n    },\r\n    /* 获取DOM元素 */\r\n    getDOMEl () {\r\n      this.canvas = document.querySelector('#canvas')\r\n      this.fileInputBtn = document.querySelector('#fileInputBtn')\r\n      this.imageInputBtn = document.querySelector('#imageInputBtn')\r\n    },\r\n    /* canvas可用性测试 */\r\n    canvasSupTest () {\r\n      if (!(this.canvas.getContext && this.canvas.getContext('2d'))) {\r\n        const section = document.createElement('section') // 创建section元素\r\n        section.className = 'errorCanvas'\r\n        section.innerHTML = '对不起，当前浏览器不支持canvas'\r\n        this.canvas.prepend(section)\r\n        throw new Error('对不起，当前浏览器不支持canvas') // 终止代码运行\r\n      }\r\n    },\r\n    /* 属性初始化 */\r\n    porpertyInit () {\r\n      // 这里设置宽高等于可见宽高很重要\r\n      this.canvas.width = this.canvas.clientWidth\r\n      this.canvas.height = this.canvas.clientHeight\r\n      // this.windowToCanvas() // 强制与窗口化大小保持一致\r\n      this.cxt = this.canvas.getContext('2d')\r\n      this.cxt.fillStyle = this.canvasBgColor // 填充颜色设定\r\n      this.cxt.fillRect(0, 0, this.canvas.width, this.canvas.height) // 画一个矩形 大小占满canvas 当做背景\r\n      this.cxt.strokeStyle = this.lineColor // 边框颜色设定\r\n      this.cxt.lineWidth = this.lineWidth // 线条粗细设定\r\n      this.cxt.lineCap = 'round' // 线条末端设定 为圆形\r\n      this.cxt.lineJoin = 'round' // 线条交汇处设定 为圆形边角\r\n      // 利用阴影 消除锯齿 注意颜色与线条颜色保持一致\r\n      this.cxt.shadowBlur = 1\r\n      this.cxt.shadowColor = this.lineColor\r\n    },\r\n    /* 创建路径与移动触点 */\r\n    beginAndMove (x, y) {\r\n      this.cxt.beginPath() // 创建新路径\r\n      this.cxt.moveTo(x, y) // 移动触点\r\n    },\r\n    /* 鼠标移动绘画 */\r\n    draw (x, y) {\r\n      this.cxt.lineTo(x, y)\r\n      this.cxt.stroke()\r\n    },\r\n    /* 闭合路径 PC请勿使用？ */\r\n    close () {\r\n      // this.cxt.closePath()\r\n    },\r\n    /* 下载签名并保存成图片 应该接收参数决定保存成图片的类型 */\r\n    download () {\r\n      if (this.imageType === 'jpg') {\r\n        var img = this.canvas.toDataURL('image/jpeg', 1)\r\n      } else if (this.imageType === 'png') {\r\n        img = this.canvas.toDataURL('image/png')\r\n      }\r\n\r\n      var downLoadLink = document.createElement('a')\r\n      downLoadLink.href = img\r\n      downLoadLink.download = 'mySignature'\r\n      downLoadLink.click() // 触发点击事件进行下载\r\n      this.$emit('uploadImageToFather', img)\r\n    },\r\n    clear () {\r\n      // this.clearTrace()\r\n      // 把导入的图片和画布一起清除\r\n      // this.image = ''\r\n      this.clearCanvas()\r\n      this.image = ''\r\n      // this.imageToInsert = ''\r\n      this.file = ''\r\n      this.newTrace = []\r\n    },\r\n    /* 清除当前canvas的内容 */\r\n    clearCanvas () {\r\n      this.cxt.clearRect(0, 0, this.canvas.width, this.canvas.height)\r\n      this.cxt.fillRect(0, 0, this.canvas.width, this.canvas.height) // 再绘制一次背景因为会连背景也清除\r\n    },\r\n    /* 清除当前轨迹数据 */\r\n    clearTrace () {\r\n      this.trace.splice(0, this.trace.length)\r\n      this.imageToInsert = ''\r\n      // this.trace = []\r\n      // this.clearCanvas()\r\n    },\r\n    /* canvas画布强制跟着窗口大小(建议每次加载强制触发) 未真机测试 */\r\n    windowToCanvas () {\r\n      this.canvas.width = window.innerWidth\r\n      this.canvas.height = window.innerHeight\r\n    }\r\n  },\r\n  components: {},\r\n  mounted () {\r\n    this.getDOMEl() // 获取DOM元素\r\n    this.canvasSupTest() // canvas可用性测试\r\n    this.porpertyInit() // 初始化属性\r\n    this.mobileCompute() // 计算移动端偏移值\r\n    // 判断pc端还是移动端\r\n    if (this.isMobile()) {\r\n      /*\r\n      移动端  回调函数使用bind传入this\r\n    */\r\n      // 开始绘制 touchstart 手指触摸时触发\r\n      this.canvas.addEventListener(\r\n        'touchstart',\r\n\r\n        function (e) {\r\n          // console.log(e)\r\n          // console.log(e.changedTouches[0].pageX,event.changedTouches[0].pageY)\r\n          /*\r\n        e.changedTouches[0].pageX 触点的X坐标\r\n        e.changedTouches[0].pageY 触点的Y坐标\r\n        */\r\n          // console.log('start')\r\n          if (!this.eraserFlag) {\r\n            // console.log(e)\r\n            // console.log(test)\r\n            this.beginAndMove(\r\n              e.changedTouches[0].pageX - this.minusX,\r\n              e.changedTouches[0].pageY - this.minusY\r\n            )\r\n            this.traceInput(\r\n              e.changedTouches[0].pageX - this.minusX,\r\n              e.changedTouches[0].pageY - this.minusY,\r\n              false\r\n            ) // 记录鼠标开始时坐标\r\n          }\r\n        }.bind(this)\r\n      )\r\n\r\n      // 绘制中 touchmove 当手指在屏幕上滑动的时候连续地触发 思路为连续触发lineTo事件\r\n      this.canvas.addEventListener(\r\n        'touchmove',\r\n        function (e) {\r\n          // console.log('move')\r\n\r\n          if (!this.eraserFlag) {\r\n            // console.log(e.changedTouches[0].pageX,event.changedTouches[0].pageY)\r\n            this.traceInput(\r\n              e.changedTouches[0].pageX - this.minusX,\r\n              e.changedTouches[0].pageY - this.minusY,\r\n              false\r\n            ) // 记录鼠标移动时坐标\r\n            this.draw(\r\n              e.changedTouches[0].pageX - this.minusX,\r\n              e.changedTouches[0].pageY - this.minusY\r\n            )\r\n          }\r\n        }.bind(this)\r\n      )\r\n\r\n      // 结束绘制 闭合线路\r\n      this.canvas.addEventListener(\r\n        'touchend',\r\n        function (e) {\r\n          // console.log('end')\r\n\r\n          if (!this.eraserFlag) {\r\n            if (this.trace.length > 0) {\r\n              this.traceInput(\r\n                e.changedTouches[0].pageX - this.minusX,\r\n                e.changedTouches[0].pageY - this.minusY,\r\n                true\r\n              ) // 记录鼠标结束时坐标\r\n            }\r\n            this.draw(\r\n              e.changedTouches[0].pageX - this.minusX,\r\n              e.changedTouches[0].pageY - this.minusY\r\n            )\r\n            // this.close()\r\n            // this.penShape() // 抬笔添加笔锋\r\n          }\r\n          // console.log('end', this.trace)\r\n        }.bind(this)\r\n      )\r\n      /* 禁止移动端默认拖拽事件 */\r\n      document.body.addEventListener(\r\n        'touchmove',\r\n        function (e) {\r\n          e.preventDefault()\r\n        },\r\n        { passive: false }\r\n      )\r\n      /* 移动端橡皮擦 */\r\n      this.canvas.addEventListener(\r\n        'touchstart',\r\n        function (e) {\r\n          if (this.eraserFlag) {\r\n            if (this.eraserTrace.length === 2) {\r\n              // 清除上一次的轨迹\r\n              this.eraserTrace = []\r\n            }\r\n            this.eraserTraceInput(\r\n              e.changedTouches[0].pageX - this.minusX,\r\n              e.changedTouches[0].pageY - this.minusY\r\n            )\r\n            // console.log(this.eraserTrace)\r\n          }\r\n        }.bind(this)\r\n      )\r\n\r\n      this.canvas.addEventListener(\r\n        'touchend',\r\n        function (e) {\r\n          // console.log(this.eraserFlag)\r\n          if (this.eraserFlag) {\r\n            this.eraserTraceInput(\r\n              e.changedTouches[0].pageX - this.minusX,\r\n              e.changedTouches[0].pageY - this.minusY\r\n            )\r\n            // console.log(this.eraserTrace)\r\n            // 相交检测并根据检测结果擦除\r\n            this.eraserTheLine()\r\n            this.eraserTrace = []\r\n          }\r\n        }.bind(this)\r\n      )\r\n    } else {\r\n      /*\r\n      PC端  回调函数使用bind传入this\r\n    */\r\n      this.canvas.addEventListener(\r\n        'mousedown',\r\n        function (e) {\r\n          if (!this.eraserFlag) {\r\n            // console.log(e)\r\n            this.traceInput(e.layerX, e.layerY, false) // 记录鼠标开始时坐标\r\n            this.beginAndMove(e.layerX, e.layerY)\r\n            this.flag = true // 鼠标移动绘制时的标志量\r\n          }\r\n        }.bind(this)\r\n      )\r\n      this.canvas.addEventListener(\r\n        'mousemove',\r\n        function (e) {\r\n          if (!this.eraserFlag && this.flag) {\r\n            this.traceInput(e.layerX, e.layerY, false) // 记录鼠标移动时坐标\r\n            this.draw(e.layerX, e.layerY)\r\n          }\r\n        }.bind(this)\r\n      )\r\n      this.canvas.addEventListener(\r\n        // 这个事件很重要 否则在使用导航栏时会出现bug\r\n        'mouseout',\r\n        function (e) {\r\n          // this.traceInput(e.pageX, e.pageY, true)\r\n          this.flag = false // 标志归位\r\n        }.bind(this)\r\n      )\r\n      this.canvas.addEventListener(\r\n        'mouseup',\r\n        function (e) {\r\n          if (!this.eraserFlag) {\r\n            if (this.trace.length > 0) {\r\n              this.traceInput(e.layerX, e.layerY, true) // 记录鼠标结束时坐标\r\n            }\r\n            this.flag = false // 标志归位\r\n            this.draw(e.layerX, e.layerY)\r\n            // this.penShape() // 抬笔添加笔锋\r\n          }\r\n\r\n          // console.log(this.trace)\r\n        }.bind(this)\r\n      )\r\n\r\n      /* PC端橡皮擦 */\r\n      this.canvas.addEventListener(\r\n        'mousedown',\r\n        function (e) {\r\n          if (this.eraserFlag) {\r\n            if (this.eraserTrace.length === 2) {\r\n              // 清除上一次的轨迹\r\n              this.eraserTrace = []\r\n            }\r\n            this.eraserTraceInput(e.layerX, e.layerY)\r\n            // console.log(this.eraserTrace)\r\n          }\r\n        }.bind(this)\r\n      )\r\n\r\n      this.canvas.addEventListener(\r\n        'mouseup',\r\n        function (e) {\r\n          // console.log(this.eraserFlag)\r\n          if (this.eraserFlag) {\r\n            this.eraserTraceInput(e.layerX, e.layerY)\r\n            // console.log(this.eraserTrace)\r\n            // 相交检测并根据检测结果擦除\r\n            this.eraserTheLine()\r\n            this.eraserTrace = []\r\n          }\r\n        }.bind(this)\r\n      )\r\n    }\r\n\r\n    /* 检测窗口变化大小 如果发生变化会清除面板和重绘数据 */\r\n    window.addEventListener(\r\n      'resize',\r\n      function () {\r\n        // location.reload()\r\n        // alert('window resize')\r\n        this.porpertyInit() // 需要重新初始化属性\r\n        // this.clearTrace() // 需要清除重绘数据\r\n        this.rePaint()\r\n      }.bind(this)\r\n    )\r\n    /* 文件选择并导入新轨迹 */\r\n    this.fileInputBtn.addEventListener(\r\n      'change',\r\n      function (e) {\r\n        this.file = e.target.files\r\n        // console.log(this.file)\r\n        const reader = new FileReader()\r\n        reader.readAsText(this.file[0])\r\n        reader.onload = function () {\r\n          this.newTrace = JSON.parse(reader.result)\r\n          this.trace = this.trace.concat(this.newTrace)\r\n        }.bind(this)\r\n      }.bind(this)\r\n    )\r\n    this.fileInputBtn.addEventListener('click', function (e) {\r\n      this.value = ''\r\n    })\r\n    /* 图片导入 */\r\n    this.imageInputBtn.addEventListener(\r\n      'change',\r\n      function (e) {\r\n        this.image = e.target.files\r\n        const reader = new FileReader()\r\n        reader.readAsDataURL(this.image[0])\r\n        reader.onload = function (e) {\r\n          this.imageToInsert = e.target.result\r\n          this.drawImageOnCanvas()\r\n          console.log(this.imageToInsert)\r\n        }.bind(this)\r\n      }.bind(this)\r\n    )\r\n    this.imageInputBtn.addEventListener('click', function (e) {\r\n      this.value = ''\r\n    })\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n#fileInputBtn {\r\n  position: absolute;\r\n  /* z-index: 99; */\r\n  left: 8px;\r\n  display: none;\r\n}\r\n.colorPicker {\r\n  position: absolute;\r\n  top: 50%;\r\n  transform: translate(0, -50%); /* 50%为自身尺寸的一半 */\r\n}\r\n\r\n.extra-show-item {\r\n  overflow: visible;\r\n}\r\n.pen-width-input {\r\n  width: 43px;\r\n}\r\n.btn-text {\r\n  margin-left: 0 !important;\r\n}\r\n.small-margin-right {\r\n  margin-right: 5px;\r\n}\r\n.small-width {\r\n  padding: 0 10px;\r\n}\r\n.menu-item {\r\n  padding: 5px;\r\n}\r\n.menu-item > span {\r\n  font-size: 15px;\r\n}\r\n.canvas-menu {\r\n  position: absolute;\r\n  top: 0;\r\n  z-index: 99;\r\n  width: 100%;\r\n}\r\n.canvas_container {\r\n  position: relative;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n.canvas_container canvas {\r\n  display: block;\r\n  width: 100%;\r\n  height: 100%;\r\n}\r\n</style>\r\n\r\n<style>\r\n.m-colorPicker .box {\r\n  position: absolute;\r\n  left: -681%;\r\n  top: 169%;\r\n}\r\n</style>\r\n","import mod from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Signature.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js!../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./Signature.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./Signature.vue?vue&type=template&id=554da1c4&scoped=true&\"\nimport script from \"./Signature.vue?vue&type=script&lang=js&\"\nexport * from \"./Signature.vue?vue&type=script&lang=js&\"\nimport style0 from \"./Signature.vue?vue&type=style&index=0&id=554da1c4&scoped=true&lang=css&\"\nimport style1 from \"./Signature.vue?vue&type=style&index=1&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"554da1c4\",\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}